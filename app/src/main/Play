package com.ascendcorparation.ascend4;


import android.content.Intent;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.TextView;
import java.util.HashMap;
import java.util.List;


public class play extends AppCompatActivity {
    int minteger = 0;
    protected TextView mCount, que;
    int score=0;
    protected int nid=1;
    String nques = "hat if you have doppelganger?";
    List<Question> quesList;protected HashMap<Integer, Question> questionMap;
    private long counter;
    private RecyclerView mRecyclerView;
    private RecyclerView.Adapter mAdapter;
    private RecyclerView.LayoutManager mLayoutManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_play);
        mCount = (TextView) findViewById(R.id.mCount);
        questionMap = new HashMap<>();
        que = (TextView) findViewById(R.id.que);
        createRecyclerView();

        nques = que.getText().toString();
        nid = Integer.valueOf(que.getText().toString());
        new CountDownTimer(30000, 1000) {

            //Здесь обновляем текст счетчика обратного отсчета с каждой секундой
            public void onTick(long millisUntilFinished) {
                mCount.setText(
                        String.valueOf((int) (+millisUntilFinished / 1000)));
            }

            //Задаем действия после завершения отсчета:
            public void onFinish() {
                Intent intent = new Intent(play.this, score.class);
                Bundle b = new Bundle();
                b.putInt("score", score); //Your score
                intent.putExtras(b);
                startActivity(intent);
            }
        }
                .start();


    }

    public void increaseInteger(View view) {
        minteger = minteger + 1;
        display(minteger);

    }public void decreaseInteger(View view) {
        minteger = minteger - 1;
        display(minteger);
    }

    private void display(int number) {
        TextView score = (TextView) findViewById(
                R.id.score);
        score.setText("" + number);
    }

    public void createRecyclerView() {
        counter = Question.count(Question.class); //получаем количество ячеек в базе, чтобы определить им размер RecyclerView
        for (int i = 1; i <= counter; i++) {
            Question question = Question.findById(Question.class, i);
            questionMap.put(i, question);
        }
        mRecyclerView = (RecyclerView) findViewById(R.id.my_recycler_view);
        mRecyclerView.setHasFixedSize(true);
        mLayoutManager = new LinearLayoutManager(this);
        mRecyclerView.setLayoutManager(mLayoutManager);
        mAdapter = new QuestionAdapter(getApplicationContext(),questionMap, counter);
        mRecyclerView.setAdapter(mAdapter);
    }
    }
